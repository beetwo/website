
.ui.header { color: $darkGrey }

//  _
// (_)__ ___ _ _
// | / _/ _ \ ' \
// |_\__\___/_||_|
i.fa, 
i.icon {
  font-family: 'FontAwesome';
  display: inline-block;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  opacity: 1;
  margin: 0em 0.25rem 0em 0em;
  width: 1.18em;
  height: 1em;
  font-style: normal;
  font-weight: normal;
  text-decoration: inherit;
  text-align: center;
  text-transform: none;
  letter-spacing: normal;
  speak: none;
  font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  font-feature-settings: 'liga';
} 

//  _         _   _
// | |__ _  _| |_| |_ ___ _ _
// | '_ \ || |  _|  _/ _ \ ' \
// |_.__/\_,_|\__|\__\___/_||_|
button {
  &:focus {
    outline: none;
  }
}


//  _ __  ___ _ _ _  _
// | '  \/ -_) ' \ || |
// |_|_|_\___|_||_\_,_|
.ui.menu {  
  &.large {
    font-size: 1rem;
    line-height: 1;
  }

  .item {
    padding: 1rem;

    & > img {
      margin: 0;
      height: 2.8rem;
    }
  }
}

.ui.inverted.menu {
  background: $darkGrey;
}

.ui.secondary.pointing.menu .item {
  padding-top: 0;
  padding-bottom: 1.5rem;
}

.ui.items > .item {

  .meta {
    @include typecsset-font-size(12px);
    font-family: 'Source-Sans'; 
    color: $darkGrey }

  & > .content {
    @include typecsset-font-size(16px);
    font-family: 'Source-Sans';
    & > .header      { color: $darkGrey }
    & > .description { color: $darkGrey }
  }
}

body.pushable {
  background: inherit;
  
  & > .pusher {
    background: $white; 
  }
}

.ui.segment {
  padding: 1.5rem 0;
}

//           _    _
//  __ _ _ _(_)__| |
// / _` | '_| / _` |
// \__, |_| |_\__,_|
// |___/
.ui.grid {
  margin-top: -1.5rem;
  margin-bottom: -1.5rem;

  & > .row,
  & > .column:not(.row) {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
  }
}

.ui.stackable.grid > .row > .wide.column,
.ui.stackable.grid > .wide.column,
.ui.stackable.grid > .column.grid > .column,
.ui.stackable.grid > .column.row > .column,
.ui.stackable.grid > .row > .column,
.ui.stackable.grid > .column:not(.row),
.ui.grid > .stackable.stackable.row > .column {
  @include mobile {
    padding: 1.5rem 1rem !important;
  }
}


.ui.stackable.divided:not(.vertically).grid > .column:not(.row){
  @include mobile {
    border-top: 1px solid rgba($darkGrey, 0.15);
    padding-top: calc(1.5rem - 1px) !important;
    padding-bottom: 1.5rem !important;
  }
}